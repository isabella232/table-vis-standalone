// This file is automatically generated based on the Looker Core API metadata.

import { Group } from './group'
import { LDAPGroupRead } from './ldap_group_read'
import { LDAPGroupWrite, RequestLDAPGroupWrite } from './ldap_group_write'
import { LDAPUserAttributeRead } from './ldap_user_attribute_read'
import { LDAPUserAttributeWrite, RequestLDAPUserAttributeWrite } from './ldap_user_attribute_write'
import { Role } from './role'

export interface LDAPConfig {
  /** Operations the current user is able to perform on this object */
  can: {[key: string]: boolean}
  /** Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled. */
  alternate_email_login_allowed: boolean
  /** Users will not be allowed to login at all unless a role for them is found in LDAP if set to true */
  auth_requires_role: boolean
  /** Distinguished name of LDAP account used to access the LDAP server */
  auth_username: string | null
  /** LDAP server hostname */
  connection_host: string | null
  /** LDAP host port */
  connection_port: string | null
  /** Use Transport Layer Security */
  connection_tls: boolean
  /** Do not verify peer when using TLS */
  connection_tls_no_verify: boolean
  /** (Read-only) Groups that will be applied to new users the first time they login via LDAP */
  default_new_user_groups: Group[] | null
  /** (Read-only) Roles that will be applied to new users the first time they login via LDAP */
  default_new_user_roles: Role[] | null
  /** Enable/Disable LDAP authentication for the server */
  enabled: boolean
  /** (Undocumented) URL to redirect to for login. Requires 'ldap_external_signon' license feature. */
  external_signon_url: string | null
  /** Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it. */
  force_no_page: boolean
  /** (Read-only) Array of mappings between LDAP Groups and Looker Roles */
  groups: LDAPGroupRead[] | null
  /** Base dn for finding groups in LDAP searches */
  groups_base_dn: string | null
  /** Identifier for a strategy for how Looker will search for groups in the LDAP server */
  groups_finder_type: string | null
  /** LDAP Group attribute that signifies the members of the groups. Most commonly 'member' */
  groups_member_attribute: string | null
  /** Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches */
  groups_objectclasses: string | null
  /** LDAP Group attribute that signifies the user in a group. Most commonly 'dn' */
  groups_user_attribute: string | null
  /** (Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids */
  groups_with_role_ids: LDAPGroupWrite[] | null
  /** (Read-only) Has the password been set for the LDAP account used to access the LDAP server */
  has_auth_password: boolean
  /** Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user. */
  merge_new_users_by_email: boolean
  /** When this config was last modified */
  modified_at: string | null
  /** User id of user who last modified this config */
  modified_by: string | null
  /** Set user roles in Looker based on groups from LDAP */
  set_roles_from_groups: boolean
  /** Name of user record attributes used to indicate email address field */
  user_attribute_map_email: string | null
  /** Name of user record attributes used to indicate first name */
  user_attribute_map_first_name: string | null
  /** Name of user record attributes used to indicate last name */
  user_attribute_map_last_name: string | null
  /** Name of user record attributes used to indicate unique record id */
  user_attribute_map_ldap_id: string | null
  /** (Read-only) Array of mappings between LDAP User Attributes and Looker User Attributes */
  user_attributes: LDAPUserAttributeRead[] | null
  /** (Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids */
  user_attributes_with_ids: LDAPUserAttributeWrite[] | null
  /** Distinguished name of LDAP node used as the base for user searches */
  user_bind_base_dn: string | null
  /** (Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses. */
  user_custom_filter: string | null
  /** Name(s) of user record attributes used for matching user login id (comma separated list) */
  user_id_attribute_names: string | null
  /** (Optional) Name of user record objectclass used for finding user during login id */
  user_objectclass: string | null
  /** Link to get this item */
  url: string | null
}

export interface RequestLDAPConfig {
  /** Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled. */
  alternate_email_login_allowed?: boolean
  /** (Write-Only)  Password for the LDAP account used to access the LDAP server */
  auth_password?: string | null
  /** Users will not be allowed to login at all unless a role for them is found in LDAP if set to true */
  auth_requires_role?: boolean
  /** Distinguished name of LDAP account used to access the LDAP server */
  auth_username?: string | null
  /** LDAP server hostname */
  connection_host?: string | null
  /** LDAP host port */
  connection_port?: string | null
  /** Use Transport Layer Security */
  connection_tls?: boolean
  /** Do not verify peer when using TLS */
  connection_tls_no_verify?: boolean
  /** (Write-Only)  Array of ids of groups that will be applied to new users the first time they login via LDAP */
  default_new_user_group_ids?: number[] | null
  /** (Write-Only)  Array of ids of roles that will be applied to new users the first time they login via LDAP */
  default_new_user_role_ids?: number[] | null
  /** Enable/Disable LDAP authentication for the server */
  enabled?: boolean
  /** (Undocumented) URL to redirect to for login. Requires 'ldap_external_signon' license feature. */
  external_signon_url?: string | null
  /** Don't attempt to do LDAP search result paging (RFC 2696) even if the LDAP server claims to support it. */
  force_no_page?: boolean
  /** Base dn for finding groups in LDAP searches */
  groups_base_dn?: string | null
  /** Identifier for a strategy for how Looker will search for groups in the LDAP server */
  groups_finder_type?: string | null
  /** LDAP Group attribute that signifies the members of the groups. Most commonly 'member' */
  groups_member_attribute?: string | null
  /** Optional comma-separated list of supported LDAP objectclass for groups when doing groups searches */
  groups_objectclasses?: string | null
  /** LDAP Group attribute that signifies the user in a group. Most commonly 'dn' */
  groups_user_attribute?: string | null
  /** (Read/Write) Array of mappings between LDAP Groups and arrays of Looker Role ids */
  groups_with_role_ids?: RequestLDAPGroupWrite[] | null
  /** Merge first-time ldap login to existing user account by email addresses. When a user logs in for the first time via ldap this option will connect this user into their existing account by finding the account with a matching email address. Otherwise a new user account will be created for the user. */
  merge_new_users_by_email?: boolean
  /** Set user roles in Looker based on groups from LDAP */
  set_roles_from_groups?: boolean
  /** (Write-Only)  Test LDAP user password. For ldap tests only. */
  test_ldap_password?: string | null
  /** (Write-Only)  Test LDAP user login id. For ldap tests only. */
  test_ldap_user?: string | null
  /** Name of user record attributes used to indicate email address field */
  user_attribute_map_email?: string | null
  /** Name of user record attributes used to indicate first name */
  user_attribute_map_first_name?: string | null
  /** Name of user record attributes used to indicate last name */
  user_attribute_map_last_name?: string | null
  /** Name of user record attributes used to indicate unique record id */
  user_attribute_map_ldap_id?: string | null
  /** (Read/Write) Array of mappings between LDAP User Attributes and arrays of Looker User Attribute ids */
  user_attributes_with_ids?: RequestLDAPUserAttributeWrite[] | null
  /** Distinguished name of LDAP node used as the base for user searches */
  user_bind_base_dn?: string | null
  /** (Optional) Custom RFC-2254 filter clause for use in finding user during login. Combined via 'and' with the other generated filter clauses. */
  user_custom_filter?: string | null
  /** Name(s) of user record attributes used for matching user login id (comma separated list) */
  user_id_attribute_names?: string | null
  /** (Optional) Name of user record objectclass used for finding user during login id */
  user_objectclass?: string | null
}
