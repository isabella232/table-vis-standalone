// This file is automatically generated based on the Looker Core API metadata.

import { Group } from './group'
import { OIDCGroupRead } from './oidc_group_read'
import { OIDCGroupWrite, RequestOIDCGroupWrite } from './oidc_group_write'
import { OIDCUserAttributeRead } from './oidc_user_attribute_read'
import { OIDCUserAttributeWrite, RequestOIDCUserAttributeWrite } from './oidc_user_attribute_write'
import { Role } from './role'

export interface OIDCConfig {
  /** Operations the current user is able to perform on this object */
  can: {[key: string]: boolean}
  /** Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled. */
  alternate_email_login_allowed: boolean
  /** OpenID Provider Audience */
  audience: string | null
  /** Users will not be allowed to login at all unless a role for them is found in OIDC if set to true */
  auth_requires_role: boolean
  /** OpenID Provider Authorization Url */
  authorization_endpoint: string | null
  /** (Read-only) Groups that will be applied to new users the first time they login via OIDC */
  default_new_user_groups: Group[] | null
  /** (Read-only) Roles that will be applied to new users the first time they login via OIDC */
  default_new_user_roles: Role[] | null
  /** Enable/Disable OIDC authentication for the server */
  enabled: boolean
  /** (Read-only) Array of mappings between OIDC Groups and Looker Roles */
  groups: OIDCGroupRead[] | null
  /** Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values' */
  groups_attribute: string | null
  /** (Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids */
  groups_with_role_ids: OIDCGroupWrite[] | null
  /** Relying Party Identifier (provided by OpenID Provider) */
  identifier: string | null
  /** OpenID Provider Issuer */
  issuer: string | null
  /** When this config was last modified */
  modified_at: string | null
  /** User id of user who last modified this config */
  modified_by: number | null
  /** Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google' */
  new_user_migration_types: string | null
  /** Array of scopes to request. */
  scopes: string[] | null
  /** Set user roles in Looker based on groups from OIDC */
  set_roles_from_groups: boolean
  /** Slug to identify configurations that are created in order to run a OIDC config test */
  test_slug: string | null
  /** OpenID Provider Token Url */
  token_endpoint: string | null
  /** Name of user record attributes used to indicate email address field */
  user_attribute_map_email: string | null
  /** Name of user record attributes used to indicate first name */
  user_attribute_map_first_name: string | null
  /** Name of user record attributes used to indicate last name */
  user_attribute_map_last_name: string | null
  /** (Read-only) Array of mappings between OIDC User Attributes and Looker User Attributes */
  user_attributes: OIDCUserAttributeRead[] | null
  /** (Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids */
  user_attributes_with_ids: OIDCUserAttributeWrite[] | null
  /** OpenID Provider User Information Url */
  userinfo_endpoint: string | null
  /** Link to get this item */
  url: string | null
}

export interface RequestOIDCConfig {
  /** Allow alternate email-based login via '/login/email' for admins and for specified users with the 'login_special_email' permission. This option is useful as a fallback during ldap setup, if ldap config problems occur later, or if you need to support some users who are not in your ldap directory. Looker email/password logins are always disabled for regular users when ldap is enabled. */
  alternate_email_login_allowed?: boolean
  /** OpenID Provider Audience */
  audience?: string | null
  /** Users will not be allowed to login at all unless a role for them is found in OIDC if set to true */
  auth_requires_role?: boolean
  /** OpenID Provider Authorization Url */
  authorization_endpoint?: string | null
  /** (Write-Only) Array of ids of groups that will be applied to new users the first time they login via OIDC */
  default_new_user_group_ids?: number[] | null
  /** (Write-Only) Array of ids of roles that will be applied to new users the first time they login via OIDC */
  default_new_user_role_ids?: number[] | null
  /** Enable/Disable OIDC authentication for the server */
  enabled?: boolean
  /** Name of user record attributes used to indicate groups. Used when 'groups_finder_type' is set to 'grouped_attribute_values' */
  groups_attribute?: string | null
  /** (Read/Write) Array of mappings between OIDC Groups and arrays of Looker Role ids */
  groups_with_role_ids?: RequestOIDCGroupWrite[] | null
  /** Relying Party Identifier (provided by OpenID Provider) */
  identifier?: string | null
  /** OpenID Provider Issuer */
  issuer?: string | null
  /** Merge first-time oidc login to existing user account by email addresses. When a user logs in for the first time via oidc this option will connect this user into their existing account by finding the account with a matching email address by testing the given types of credentials for existing users. Otherwise a new user account will be created for the user. This list (if provided) must be a comma separated list of string like 'email,ldap,google' */
  new_user_migration_types?: string | null
  /** Array of scopes to request. */
  scopes?: string[] | null
  /** (Write-Only) Relying Party Secret (provided by OpenID Provider) */
  secret?: string | null
  /** Set user roles in Looker based on groups from OIDC */
  set_roles_from_groups?: boolean
  /** OpenID Provider Token Url */
  token_endpoint?: string | null
  /** Name of user record attributes used to indicate email address field */
  user_attribute_map_email?: string | null
  /** Name of user record attributes used to indicate first name */
  user_attribute_map_first_name?: string | null
  /** Name of user record attributes used to indicate last name */
  user_attribute_map_last_name?: string | null
  /** (Read/Write) Array of mappings between OIDC User Attributes and arrays of Looker User Attribute ids */
  user_attributes_with_ids?: RequestOIDCUserAttributeWrite[] | null
  /** OpenID Provider User Information Url */
  userinfo_endpoint?: string | null
}
