// This file is automatically generated based on the Looker Core API metadata.

import { RequestScheduledPlanDestination, ScheduledPlanDestination } from './scheduled_plan_destination'
import { UserPublic } from './user_public'

export interface ScheduledPlan {
  /** Name of this scheduled plan */
  name: string | null
  /** User Id which owns this scheduled plan */
  user_id: number | null
  /** Whether schedule is run as recipient (only applicable for email recipients) */
  run_as_recipient: boolean
  /** Whether the ScheduledPlan is enabled */
  enabled: boolean
  /** Id of a look */
  look_id: number | null
  /** Id of a dashboard */
  dashboard_id: number | null
  /** Id of a LookML dashboard */
  lookml_dashboard_id: string | null
  /** Query string to run look or dashboard with */
  filters_string: string | null
  /** Delivery should occur if running the dashboard or look returns results */
  require_results: boolean
  /** Delivery should occur if the dashboard look does not return results */
  require_no_results: boolean
  /** Delivery should occur if data have changed since the last run */
  require_change: boolean
  /** Will run an unlimited query and send all results. */
  send_all_results: boolean
  /** Vixie-Style crontab specification when to run */
  crontab: string | null
  /** Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string) */
  datagroup: string | null
  /** Timezone for interpreting the specified crontab (default is Looker instance timezone) */
  timezone: string | null
  /** Query id */
  query_id: string | null
  /** Scheduled plan destinations */
  scheduled_plan_destination: ScheduledPlanDestination[] | null
  /** Whether the plan in question should only be run once (usually for testing) */
  run_once: boolean
  /** Whether links back to Looker should be included in this ScheduledPlan */
  include_links: boolean
  /** The size of paper a PDF should be rendered for */
  pdf_paper_size: string | null
  /** Whether the paper should be landscape */
  pdf_landscape: boolean
  /** Whether this schedule is in an embed context or not */
  embed: boolean
  /** Color scheme of the dashboard if applicable */
  color_theme: string | null
  /** Whether or not to expand table vis to full length */
  long_tables: boolean
  /** Unique Id */
  id: number
  /** Date and time when ScheduledPlan was created */
  created_at: string | null
  /** Date and time when ScheduledPlan was last updated */
  updated_at: string | null
  /** Title */
  title: string | null
  /** User who owns this ScheduledPlan */
  user: UserPublic | null
  /** When the ScheduledPlan will next run (null if running once) */
  next_run_at: string | null
  /** When the ScheduledPlan was last run */
  last_run_at: string | null
  /** Operations the current user is able to perform on this object */
  can: {[key: string]: boolean}
}

export interface RequestScheduledPlan {
  /** Name of this scheduled plan */
  name?: string | null
  /** User Id which owns this scheduled plan */
  user_id?: number | null
  /** Whether schedule is run as recipient (only applicable for email recipients) */
  run_as_recipient?: boolean
  /** Whether the ScheduledPlan is enabled */
  enabled?: boolean
  /** Id of a look */
  look_id?: number | null
  /** Id of a dashboard */
  dashboard_id?: number | null
  /** Id of a LookML dashboard */
  lookml_dashboard_id?: string | null
  /** Query string to run look or dashboard with */
  filters_string?: string | null
  /** Delivery should occur if running the dashboard or look returns results */
  require_results?: boolean
  /** Delivery should occur if the dashboard look does not return results */
  require_no_results?: boolean
  /** Delivery should occur if data have changed since the last run */
  require_change?: boolean
  /** Will run an unlimited query and send all results. */
  send_all_results?: boolean
  /** Vixie-Style crontab specification when to run */
  crontab?: string | null
  /** Name of a datagroup; if specified will run when datagroup triggered (can't be used with cron string) */
  datagroup?: string | null
  /** Timezone for interpreting the specified crontab (default is Looker instance timezone) */
  timezone?: string | null
  /** Query id */
  query_id?: string | null
  /** Scheduled plan destinations */
  scheduled_plan_destination?: RequestScheduledPlanDestination[] | null
  /** Whether the plan in question should only be run once (usually for testing) */
  run_once?: boolean
  /** Whether links back to Looker should be included in this ScheduledPlan */
  include_links?: boolean
  /** The size of paper a PDF should be rendered for */
  pdf_paper_size?: string | null
  /** Whether the paper should be landscape */
  pdf_landscape?: boolean
  /** Whether this schedule is in an embed context or not */
  embed?: boolean
  /** Color scheme of the dashboard if applicable */
  color_theme?: string | null
  /** Whether or not to expand table vis to full length */
  long_tables?: boolean
}
