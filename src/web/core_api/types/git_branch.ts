// This file is automatically generated based on the Looker Core API metadata.

export interface GitBranch {
  /** Operations the current user is able to perform on this object */
  can: {[key: string]: boolean}
  /** The short name on the local. Updating `name` results in `git checkout <new_name>` */
  name: string | null
  /** The name of the remote */
  remote: string | null
  /** The short name on the remote */
  remote_name: string | null
  /** Name of error */
  error: string | null
  /** Message describing an error if present */
  message: string | null
  /** Name of the owner of a personal branch */
  owner_name: string | null
  /** Whether or not this branch is readonly */
  readonly: boolean
  /** Whether or not this branch is a personal branch - readonly for all developers except the owner */
  personal: boolean
  /** Whether or not a local ref exists for the branch */
  is_local: boolean
  /** Whether or not a remote ref exists for the branch */
  is_remote: boolean
  /** Whether or not this is the production branch */
  is_production: boolean
  /** Number of commits the local branch is ahead of the remote */
  ahead_count: number | null
  /** Number of commits the local branch is behind the remote */
  behind_count: number | null
  /** UNIX timestamp at which this branch was last committed. */
  commit_at: number | null
  /** The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``. */
  ref: string | null
  /** The resolved ref of this branch remote. */
  remote_ref: string | null
}

export interface RequestGitBranch {
  /** The short name on the local. Updating `name` results in `git checkout <new_name>` */
  name?: string | null
  /** The resolved ref of this branch. Updating `ref` results in `git reset --hard <new_ref>``. */
  ref?: string | null
}
